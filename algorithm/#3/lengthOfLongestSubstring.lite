"algorithm" {
}
LengthOfLongestSubstring(s: Str -> length: Int) {
    Top := 0
    Temp := []Int{}

    HaveIt(input: []Int, it: Int -> yes: Bool, index: Int) {
        input @ [i]v {
            ? v == it  {
                <- True, i
            }
        }
        <- False, 0
    }

    s @ v {
        (Yes, Index) := HaveIt(Temp, v)
        ? Yes {
            Temp = Temp.subStr(Index + 1)
        }
        Temp += v

        ? Temp.len > Top {
            Top = Temp.len
        }
    }
    <- Top
}
